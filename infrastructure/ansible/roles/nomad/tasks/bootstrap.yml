---
- name: Bootstrap Nomad ACL
  run_once: true
  block:
    - name: Bootstrap Nomad ACL
      register: nomad_bootstrap_acl_result
      failed_when: false
      changed_when: nomad_bootstrap_acl_result.rc == 0
      ansible.builtin.command:
        argv:
          - "{{ nomad_binary_path }}"
          - acl
          - bootstrap
          - -json
      environment:
        NOMAD_ADDR: "https://{{ nomad_https_endpoint }}"
        NOMAD_CACERT: "{{ (nomad_pki_ca_dir, 'nomad.crt') | ansible.builtin.path_join }}"
        NOMAD_CLIENT_KEY: "{{ (nomad_pki_entity_dir, 'cli.key') | ansible.builtin.path_join }}"
        NOMAD_CLIENT_CERT: "{{ (nomad_pki_entity_dir, 'cli.crt') | ansible.builtin.path_join }}"

    - name: Write ACL bootstrap result to file
      when: nomad_bootstrap_acl_result.rc == 0
      become: false
      delegate_to: localhost
      ansible.builtin.copy:
        mode: "0600"
        dest: "{{ nomad_controller_secrets_acl_path }}"
        content: |-
          ---
          {{
            {"nomad_secrets_acl": nomad_bootstrap_acl_result.stdout | ansible.builtin.from_json}
            | ansible.builtin.to_nice_yaml(indent=2)
          }}

- name: Apply Terraform project
  run_once: true
  block:
    - name: Include Consul ACL bootstrap result
      ansible.builtin.include_vars:
        file: "{{ consul_controller_secrets_acl_path }}"

    - name: Include Nomad ACL bootstrap result
      ansible.builtin.include_vars:
        file: "{{ nomad_controller_secrets_acl_path }}"

    - name: Include Vault keys bootstrap result
      ansible.builtin.include_vars:
        file: "{{ vault_controller_secrets_keys_path }}"

    - name: Apply Terraform project
      register: nomad_bootstrap_terraform_result
      community.general.terraform:
        project_path: "{{ nomad_terraform_bootstrap_project_dir }}"
        binary_path: "{{ terraform_binary_path }}"
        force_init: true
        variables:
          nomad_token: "{{ nomad_secrets_acl.SecretID }}"
          nomad_ca_file: "{{ (nomad_pki_ca_dir, 'nomad.crt') | ansible.builtin.path_join }}"
          nomad_endpoint: "{{ nomad_balancer_https_endpoint }}"
          nomad_jwks_url: "https://{{ nomad_balancer_https_endpoint }}/.well-known/jwks.json"
          consul_nomad_jwt_auth_method: "{{ nomad_consul_jwt_auth_method }}"
          vault_nomad_jwt_auth_backend: "{{ nomad_vault_jwt_auth_backend }}"
          vault_token: "{{ vault_secrets_keys.root_token }}"
          vault_ca_file: "{{ (nomad_pki_ca_dir, 'vault.crt') | ansible.builtin.path_join }}"
          vault_endpoint: "{{ nomad_vault_balancer_https_endpoint }}"
          consul_token: "{{ consul_secrets_acl.SecretID }}"
          consul_ca_file: "{{ (nomad_pki_ca_dir, 'consul.crt') | ansible.builtin.path_join }}"
          consul_endpoint: "{{ nomad_consul_https_endpoint }}"
      environment:
        TF_CLI_CONFIG_FILE: "{{ terraform_config_path }}"
