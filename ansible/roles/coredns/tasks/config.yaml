---
- name: Create CoreDNS directories
  loop:
    - path: "{{ coredns_config_dir }}"
      mode: "0755"
    - path: "{{ coredns_config_zone_dir }}"
      mode: "0755"
    - path: "{{ coredns_config_include_dir }}"
      mode: "0755"
  loop_control:
    label: "{{ item.path }}"
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "{{ item.mode }}"
    state: directory
    owner: "{{ coredns_install_user }}"
    group: "{{ coredns_install_group }}"

- name: Render CoreDNS config template
  ansible.builtin.template:
    src: Corefile.j2
    dest: "{{ coredns_config_file }}"
    mode: "0644"
    owner: "{{ coredns_install_user }}"
    group: "{{ coredns_install_group }}"

- name: Render CoreDNS snippets config template
  ansible.builtin.template:
    src: 001-snippet.conf.j2
    dest: "{{ coredns_config_snippet_file }}"
    mode: "0644"
    owner: "{{ coredns_install_user }}"
    group: "{{ coredns_install_group }}"

- name: Ensure CoreDNS config block exists
  block:
    - name: Stat CoreDNS config block file
      register: coredns_config_block_stat_result
      ansible.builtin.stat:
        path: "{{ coredns_config_block_file }}"

    - name: Render CoreDNS config block file
      when: not coredns_config_block_stat_result.stat.exists
      vars: { common_managed_content: "" }
      ansible.builtin.template:
        src: "{{ common_template_managed_local_path }}"
        dest: "{{ coredns_config_block_file }}"
        mode: "0644"
        owner: "{{ coredns_install_user }}"
        group: "{{ coredns_install_group }}"

- name: Include CoreDNS config fragments
  vars:
    common_block_path: "{{ coredns_config_block_file }}"
    common_block_label: "{{ item.key }}"
    common_block_content: "{{ item.value }}"
  loop: "{{ coredns_config | ansible.builtin.dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  ansible.builtin.include_tasks:
    file: "{{ (common_task_local_dir, 'block.yaml') | ansible.builtin.path_join }}"

- name: Copy CoreDNS zone databases
  loop: "{{ coredns_config_zones | ansible.builtin.dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  vars:
    common_managed_content: "{{ item.value }}"
    common_managed_comment_decoration: "; "
  ansible.builtin.template:
    src: "{{ common_template_managed_local_path }}"
    dest: "{{ (coredns_config_zone_dir, item.key ~ '.zone') | ansible.builtin.path_join }}"
    mode: "0644"
    owner: "{{ coredns_install_user }}"
    group: "{{ coredns_install_group }}"

- name: Render resolv.conf template
  when: ansible_virtualization_type != "docker"
  vars:
    common_managed_content: "{{ lookup('ansible.builtin.file', (coredns_main_file_local_dir, 'config/resolv.conf') | ansible.builtin.path_join) }}"
  failed_when: false
  ansible.builtin.template:
    src: "{{ common_template_managed_local_path }}"
    dest: /etc/resolv.conf
    mode: "0644"
    owner: root
    group: root
    attributes: +i

- name: Update CoreDNS Pebble layer
  vars:
    pebble_layer: "{{ coredns_config_pebble_layer }}"
  notify: Add CoreDNS Pebble layer
  ansible.builtin.template:
    src: "{{ pebble_template_layer_local_path }}"
    dest: "{{ coredns_config_pebble_layer_file }}"
    mode: "0644"
    owner: root
    group: root

- name: Flush handlers
  run_once: true
  ansible.builtin.meta: flush_handlers
