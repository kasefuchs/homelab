---
- name: Download Monit archives
  become: false
  run_once: true
  delegate_to: localhost
  block:
    - name: Create version directory
      ansible.builtin.file:
        path: "{{ (monit_controller_source_cache_dir, monit_version) | ansible.builtin.path_join }}"
        mode: "0755"
        state: directory

    - name: Check if the Monit archives already exists
      loop: "{{ monit_architectures.values() }}"
      loop_control:
        loop_var: monit_architecture
      register: monit_files
      ansible.builtin.stat:
        path: "{{ (monit_controller_source_cache_dir, monit_version, monit_architecture) | ansible.builtin.path_join }}"

    - name: Download Monit archives
      loop: "{{ monit_architectures.values() }}"
      loop_control:
        extended: true
        loop_var: monit_architecture
      when: not monit_files.results[ansible_loop.index0].stat.exists
      ansible.builtin.get_url:
        url: "{{ monit_download_url }}"
        dest: "{{ (monit_controller_source_cache_dir, monit_version, monit_architecture) | ansible.builtin.path_join }}"

- name: Set Monit filesystem facts
  run_once: true
  ansible.builtin.set_fact:
    monit_source_version_dir: "{{ (monit_source_dir, monit_version) | ansible.builtin.path_join }}"

- name: Create directories
  block:
    - name: Create Monit source cache directory
      ansible.builtin.file:
        mode: "0755"
        path: "{{ monit_source_cache_dir }}"
        state: directory

    - name: Create Monit source version directory
      ansible.builtin.file:
        mode: "0755"
        path: "{{ monit_source_version_dir }}"
        state: directory

    - name: Link Monit source version to application directory
      ansible.builtin.file:
        src: "{{ monit_source_version_dir }}"
        dest: "{{ monit_application_dir }}"
        state: link

- name: Install Monit binary
  block:
    - name: Copy Monit archive
      ansible.builtin.copy:
        src: "{{ (monit_controller_source_cache_dir, monit_version, monit_architectures[ansible_architecture]) | ansible.builtin.path_join }}"
        dest: "{{ (monit_source_cache_dir, monit_version) | ansible.builtin.path_join }}"

    - name: Extract Monit archive
      ansible.builtin.unarchive:
        src: "{{ (monit_source_cache_dir, monit_version) | ansible.builtin.path_join }}"
        dest: "{{ monit_application_dir }}"
        creates: "{{ monit_application_binary_path }}"
        extra_opts: "{{ monit_unarchive_extra_opts }}"
        remote_src: true

    - name: Create Monit binary symlink
      ansible.builtin.file:
        src: "{{ monit_application_binary_path }}"
        dest: "{{ monit_binary_path }}"
        state: link
