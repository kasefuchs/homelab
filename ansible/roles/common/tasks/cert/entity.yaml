---
- name: Stat encrypted key
  register: common_cert_entity_key_encrypted_stat_result
  ansible.builtin.stat:
    path: "{{ common_cert_entity_key_encrypted_local_path }}"

- name: Create key if not exists
  when: not common_cert_entity_key_encrypted_stat_result.stat.exists
  block:
    - name: Create key
      register: common_cert_entity_key
      community.crypto.openssl_privatekey_pipe:

    - name: Write encrypted key to disk
      community.sops.sops_encrypt:
        path: "{{ common_cert_entity_key_encrypted_local_path }}"
        content_text: "{{ common_cert_entity_key.privatekey }}"

- name: Stat certificate
  register: common_cert_entity_crt_stat_result
  ansible.builtin.stat:
    path: "{{ common_cert_entity_crt_local_path }}"

- name: Create certificate if not exists
  when: not common_cert_entity_crt_stat_result.stat.exists
  block:
    - name: Create certificate signing request
      register: common_cert_entity_csr
      community.crypto.openssl_csr_pipe:
        privatekey_content: "{{ lookup('community.sops.sops', common_cert_entity_key_encrypted_local_path) }}"
        subject: "{{ common_cert_entity_subject }}"
        subject_alt_name: "{{ ['IP:'] | product(common_cert_entity_ip_sans) | map('join') + ['DNS:'] | product(common_cert_entity_dns_sans) | map('join') }}"
        extended_key_usage: "{{ common_cert_entity_eku | default(['serverAuth', 'clientAuth']) }}"

    - name: Create certificate from signing request
      community.crypto.x509_certificate:
        path: "{{ common_cert_entity_crt_local_path }}"
        provider: ownca
        csr_content: "{{ common_cert_entity_csr.csr }}"
        ownca_path: "{{ common_cert_ca_crt_local_path }}"
        ownca_privatekey_content: "{{ lookup('community.sops.sops', common_cert_ca_key_encrypted_local_path) }}"
        ownca_not_after: "+{{ common_cert_entity_duration }}"
        ownca_not_before: "-1d"
