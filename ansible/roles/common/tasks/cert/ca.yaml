---
- name: Stat encrypted key
  register: common_cert_ca_key_encrypted_stat_result
  ansible.builtin.stat:
    path: "{{ common_cert_ca_key_encrypted_local_path }}"

- name: Create key if not exists
  when: not common_cert_ca_key_encrypted_stat_result.stat.exists
  block:
    - name: Create key
      register: common_cert_ca_key
      community.crypto.openssl_privatekey_pipe:

    - name: Write encrypted key to disk
      community.sops.sops_encrypt:
        path: "{{ common_cert_ca_key_encrypted_local_path }}"
        content_text: "{{ common_cert_ca_key.privatekey }}"

- name: Create signing request
  register: common_cert_ca_csr
  community.crypto.openssl_csr:
    path: "{{ common_cert_ca_csr_local_path }}"
    privatekey_content: "{{ lookup('community.sops.sops', common_cert_ca_key_encrypted_local_path) }}"
    subject: "{{ common_cert_ca_subject }}"
    use_common_name_for_san: false
    key_usage: [keyCertSign]
    key_usage_critical: true
    basic_constraints: [CA:TRUE]
    basic_constraints_critical: true

- name: Create certificate from signing request
  community.crypto.x509_certificate:
    path: "{{ common_cert_ca_crt_local_path }}"
    csr_path: "{{ common_cert_ca_csr.filename }}"
    privatekey_content: "{{ lookup('community.sops.sops', common_cert_ca_key_encrypted_local_path) }}"
    provider: selfsigned
    ownca_not_after: "+{{ common_cert_ca_duration }}"
    ownca_not_before: "-1d"
