---
static_resources:
  clusters:
    - name: backend
      health_checks:
        - timeout: 1s
          interval: 5s
          healthy_threshold: 2
          unhealthy_threshold: 2
          http_health_check:
            path: "/v1/sys/health"
          transport_socket_match_criteria:
            useMTLS: true
      load_assignment:
        cluster_name: backend
        endpoints:
          - lb_endpoints:
{% for vars in hostvars.values() if vars.vault_server | default(true) %}
              - endpoint:
                  address:
                    socket_address:
                      address: "{{ vars.nebula_ip | ansible.utils.ipaddr('address') }}"
                      port_value: 8200
{% endfor %}
      transport_socket_matches:
        - name: useMTLS
          match:
            useMTLS: true
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                tls_certificates:
                  - private_key:
                      filename: "/etc/vault/certificates/cli.key"
                    certificate_chain:
                      filename: "/etc/vault/certificates/cli.pem"
                validation_context:
                  trusted_ca:
                    filename: "/etc/vault/certificates/ca.pem"
  listeners:
    - name: listener
      address:
        socket_address:
          address: "127.0.0.1"
          port_value: 8101
      filter_chains:
        - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                cluster: backend
                stat_prefix: destination
