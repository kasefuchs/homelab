api_addr     = "{{ vault_server_advertise_api_address }}"
cluster_addr = "{{ vault_server_advertise_cluster_address }}"
cluster_name = "{{ vault_server_cluster_name }}"

ui            = true
disable_mlock = true

listener "tcp" {
  address         = "{{ vault_server_api_address }}"
  cluster_address = "{{ vault_server_cluster_address }}"

  tls_key_file  = "{{ (vault_pki_dir, 'server.key') | ansible.builtin.path_join }}"
  tls_cert_file = "{{ (vault_pki_dir, 'server.pem') | ansible.builtin.path_join }}"

  tls_require_and_verify_client_cert = false
}

storage "raft" {
  path    = "{{ vault_server_raft_dir }}"
  node_id = "{{ vault_server_raft_node_id }}"

{% for host, api_addr in vault_server_raft_peers.items() if host != inventory_hostname %}
  retry_join {
    leader_api_addr       = "{{ api_addr }}"
    leader_tls_servername = "{{ host }}.server.vault"

    leader_ca_cert_file     = "{{ (vault_pki_dir, 'ca.pem') | ansible.builtin.path_join }}"
    leader_client_key_file  = "{{ (vault_pki_dir, 'cli.key') | ansible.builtin.path_join }}"
    leader_client_cert_file = "{{ (vault_pki_dir, 'cli.pem') | ansible.builtin.path_join }}"
  }
{% endfor %}
}
