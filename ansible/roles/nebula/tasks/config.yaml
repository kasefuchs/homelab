---
- name: Create Nebula directories
  loop:
    - path: "{{ nebula_config_dir }}"
      mode: "0755"
    - path: "{{ nebula_config_cert_dir }}"
      mode: "0755"
    - path: "{{ nebula_config_cert_ca_dir }}"
      mode: "0755"
    - path: "{{ nebula_config_cert_entity_dir }}"
      mode: "0700"
  loop_control:
    label: "{{ item.path }}"
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "{{ item.mode }}"
    state: directory
    owner: "{{ nebula_install_user }}"
    group: "{{ nebula_install_group }}"

- name: Copy Nebula certificates
  loop:
    - label: CA certificate
      src: "{{ nebula_cert_ca_crt_local_path }}"
      dest: "{{ (nebula_config_cert_ca_dir, 'nebula.crt') | ansible.builtin.path_join }}"
      mode: "0644"
      lookup: ansible.builtin.file
    - label: host certificate
      src: "{{ nebula_cert_entity_crt_local_path }}"
      dest: "{{ (nebula_config_cert_entity_dir, 'host.crt') | ansible.builtin.path_join }}"
      mode: "0644"
      lookup: ansible.builtin.file
    - label: host private key
      src: "{{ nebula_cert_entity_key_encrypted_local_path }}"
      dest: "{{ (nebula_config_cert_entity_dir, 'host.key') | ansible.builtin.path_join }}"
      mode: "0600"
      lookup: community.sops.sops
  loop_control:
    label: "{{ item.label }}"
  ansible.builtin.copy:
    content: "{{ lookup(item.lookup, item.src) }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ nebula_install_user }}"
    group: "{{ nebula_install_group }}"

- name: Render Nebula config template
  ansible.builtin.template:
    src: config.yaml.j2
    dest: "{{ nebula_config_file }}"
    mode: "0644"
    owner: "{{ nebula_install_user }}"
    group: "{{ nebula_install_group }}"

- name: Update Nebula Pebble layer
  vars:
    pebble_layer: "{{ nebula_config_pebble_layer }}"
  notify: Add Nebula Pebble layer
  ansible.builtin.template:
    src: "{{ pebble_template_layer_local_path }}"
    dest: "{{ nebula_config_pebble_layer_file }}"
    mode: "0644"
    owner: root
    group: root

- name: Flush handlers
  run_once: true
  ansible.builtin.meta: flush_handlers
