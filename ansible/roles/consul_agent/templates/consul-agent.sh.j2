#!/bin/sh

RUNAS="{{ consul_agent_user }}"
SCRIPT="{{ consul_binary_path }} agent -config-dir={{ consul_config_dir }}"

LOGDIR="{{ consul_log_dir }}"
STATEDIR="{{ consul_state_dir }}"
RUNTIMEDIR="{{ consul_runtime_dir }}"

PIDFILE="{{ consul_agent_pid_path }}"
LOGFILE="{{ consul_agent_log_path }}"

STOPSIGNAL="{{ consul_agent_stop_signal }}"
RELOADSIGNAL="{{ consul_agent_reload_signal }}"

ENVIRONMENT="{{ consul_agent_environment.items() | map('join', '=') | join(' ') }}"

start() {
  if [ -f "$PIDFILE" ] && kill -0 "$(cat "$PIDFILE")"; then
    echo "Service already running" >&2
    return 1
  fi

  if [ ! -d "$RUNTIMEDIR" ]; then
    echo "Creating runtime directory: $RUNTIMEDIR" >&2
    mkdir -p "$RUNTIMEDIR"
    chown "$RUNAS" "$RUNTIMEDIR"
    chmod 750 "$RUNTIMEDIR"
  fi

  if [ ! -d "$STATEDIR" ]; then
    echo "Creating state directory: $STATEDIR" >&2
    mkdir -p "$STATEDIR"
    chown "$RUNAS" "$STATEDIR"
    chmod 750 "$STATEDIR"
  fi

  if [ ! -d "$LOGDIR" ]; then
    echo "Creating log directory: $LOGDIR" >&2
    mkdir -p "$LOGDIR"
    chown "$RUNAS" "$LOGDIR"
    chmod 750 "$LOGDIR"
  fi

  echo "Starting service…" >&2
  CMD="env $ENVIRONMENT $SCRIPT &> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" "$RUNAS" > "$PIDFILE"

  echo "Service started" >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 "$(cat "$PIDFILE")"; then
    echo "Service not running" >&2
    return 1
  fi

  echo "Stopping service…" >&2
  kill -s "$STOPSIGNAL" "$(cat "$PIDFILE")" && rm -f "$PIDFILE"

  echo "Service stopped" >&2
}

restart() {
  stop
  start
}

reload() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 "$(cat "$PIDFILE")"; then
    echo "Service not running" >&2
    return 1
  fi

  if [ "$RELOADSIGNAL" -eq 0 ]; then
    echo "Reload signal is 0, restarting service…" >&2
    restart
    return
  fi

  echo "Reloading service…" >&2
  kill -s "$RELOADSIGNAL" "$(cat "$PIDFILE")"

  echo "Service reloaded" >&2
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  reload)
    reload
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|reload}"
esac
